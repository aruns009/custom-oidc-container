# mock nginx-ingress
#
# This file is installed to:
#   `/etc/nginx/conf.d/default.conf`
#
# The two servers mock how the Kubernetes nginx-ingress behaves when hosting an application on a custom path
# In this case the path is `/nginx-oidc`.
#

# redirect http to https
server {
  listen 80;
  return 301 https://$host$request_uri;
}

# proxy pass to upstream application
server {

  listen 443 ssl;

  server_name $hostname;

  ssl_certificate /etc/nginx/ssl/localhost.crt;
  ssl_certificate_key /etc/nginx/ssl/localhost.key;

  root  /usr/local/openresty/nginx/html;
  index index.html;

  location ~* "^/my-app/?(.*)" {

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # increase buffer size for OpenID Connect headers (cookies)
    proxy_buffers     4 8k;
    proxy_buffer_size 8k;

    proxy_pass https://nginx-oidc;
  }

  location ~* "^/nodejs-starter/v1/?(.*)" {

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # increase buffer size for OpenID Connect headers (cookies)
    proxy_buffers     4 8k;
    proxy_buffer_size 8k;

    rewrite "(?i)/nodejs-starter/v1/?(.*)" /$1 break;
    proxy_pass https://nginx-rs;
  }

}
